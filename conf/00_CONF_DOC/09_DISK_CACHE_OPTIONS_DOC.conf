# DISK CACHE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: cache_replacement_policy
#	The cache replacement policy parameter determines which
#	objects are evicted (replaced) when disk space is needed.
#
#	    lru       : Squid's original list based LRU policy
#	    heap GDSF : Greedy-Dual Size Frequency
#	    heap LFUDA: Least Frequently Used with Dynamic Aging
#	    heap LRU  : LRU policy implemented using a heap
#
#	Applies to any cache_dir lines listed below this directive.
#
#	The LRU policies keeps recently referenced objects.
#
#	The heap GDSF policy optimizes object hit rate by keeping smaller
#	popular objects in cache so it has a better chance of getting a
#	hit.  It achieves a lower byte hit rate than LFUDA though since
#	it evicts larger (possibly popular) objects.
#
#	The heap LFUDA policy keeps popular objects in cache regardless of
#	their size and thus optimizes byte hit rate at the expense of
#	hit rate since one large, popular object will prevent many
#	smaller, slightly less popular objects from being cached.
#
#	Both policies utilize a dynamic aging mechanism that prevents
#	cache pollution that can otherwise occur with frequency-based
#	replacement policies.
#
#	NOTE: if using the LFUDA replacement policy you should increase
#	the value of maximum_object_size above its default of 4 MB to
#	to maximize the potential byte hit rate improvement of LFUDA.
#
#	For more information about the GDSF and LFUDA cache replacement
#	policies see http://www.hpl.hp.com/techreports/1999/HPL-1999-69.html
#	and http://fog.hpl.external.hp.com/techreports/98/HPL-98-173.html.
#Default:
# cache_replacement_policy lru

#  TAG: cache_dir
#	Format:
#		cache_dir Type Directory-Name Fs-specific-data [options]
#
#	You can specify multiple cache_dir lines to spread the
#	cache among different disk partitions.
#
#	Type specifies the kind of storage system to use. Only "ufs"
#	is built by default. To enable any of the other storage systems
#	see the --enable-storeio configure option.
#
#	'Directory' is a top-level directory where cache swap
#	files will be stored.  If you want to use an entire disk
#	for caching, this can be the mount-point directory.
#	The directory must exist and be writable by the Squid
#	process.  Squid will NOT create this directory for you.
#
#	In SMP configurations, cache_dir must not precede the workers option
#	and should use configuration macros or conditionals to give each
#	worker interested in disk caching a dedicated cache directory.
#
#
#	====  The ufs store type  ====
#
#	"ufs" is the old well-known Squid storage format that has always
#	been there.
#
#	Usage:
#		cache_dir ufs Directory-Name Mbytes L1 L2 [options]
#
#	'Mbytes' is the amount of disk space (MB) to use under this
#	directory.  The default is 100 MB.  Change this to suit your
#	configuration.  Do NOT put the size of your disk drive here.
#	Instead, if you want Squid to use the entire disk drive,
#	subtract 20% and use that value.
#
#	'L1' is the number of first-level subdirectories which
#	will be created under the 'Directory'.  The default is 16.
#
#	'L2' is the number of second-level subdirectories which
#	will be created under each first-level directory.  The default
#	is 256.
#
#
#	====  The aufs store type  ====
#
#	"aufs" uses the same storage format as "ufs", utilizing
#	POSIX-threads to avoid blocking the main Squid process on
#	disk-I/O. This was formerly known in Squid as async-io.
#
#	Usage:
#		cache_dir aufs Directory-Name Mbytes L1 L2 [options]
#
#	see argument descriptions under ufs above
#
#
#	====  The diskd store type  ====
#
#	"diskd" uses the same storage format as "ufs", utilizing a
#	separate process to avoid blocking the main Squid process on
#	disk-I/O.
#
#	Usage:
#		cache_dir diskd Directory-Name Mbytes L1 L2 [options] [Q1=n] [Q2=n]
#
#	see argument descriptions under ufs above
#
#	Q1 specifies the number of unacknowledged I/O requests when Squid
#	stops opening new files. If this many messages are in the queues,
#	Squid won't open new files. Default is 64
#
#	Q2 specifies the number of unacknowledged messages when Squid
#	starts blocking.  If this many messages are in the queues,
#	Squid blocks until it receives some replies. Default is 72
#
#	When Q1 < Q2 (the default), the cache directory is optimized
#	for lower response time at the expense of a decrease in hit
#	ratio.  If Q1 > Q2, the cache directory is optimized for
#	higher hit ratio at the expense of an increase in response
#	time.
#
#
#	====  The rock store type  ====
#
#	Usage:
#	    cache_dir rock Directory-Name Mbytes <max-size=bytes> [options]
#
#	The Rock Store type is a database-style storage. All cached
#	entries are stored in a "database" file, using fixed-size slots,
#	one entry per slot. The database size is specified in MB. The
#	slot size is specified in bytes using the max-size option. See
#	below for more info on the max-size option.
#
#	If possible, Squid using Rock Store creates a dedicated kid
#	process called "disker" to avoid blocking Squid worker(s) on disk
#	I/O. One disker kid is created for each rock cache_dir.  Diskers
#	are created only when Squid, running in daemon mode, has support
#	for the IpcIo disk I/O module.
#
#	swap-timeout=msec: Squid will not start writing a miss to or
#	reading a hit from disk if it estimates that the swap operation
#	will take more than the specified number of milliseconds. By
#	default and when set to zero, disables the disk I/O time limit
#	enforcement. Ignored when using blocking I/O module because
#	blocking synchronous I/O does not allow Squid to estimate the
#	expected swap wait time.
#
#	max-swap-rate=swaps/sec: Artificially limits disk access using
#	the specified I/O rate limit. Swap out requests that
#	would cause the average I/O rate to exceed the limit are
#	delayed. Individual swap in requests (i.e., hits or reads) are
#	not delayed, but they do contribute to measured swap rate and
#	since they are placed in the same FIFO queue as swap out
#	requests, they may wait longer if max-swap-rate is smaller.
#	This is necessary on file systems that buffer "too
#	many" writes and then start blocking Squid and other processes
#	while committing those writes to disk.  Usually used together
#	with swap-timeout to avoid excessive delays and queue overflows
#	when disk demand exceeds available disk "bandwidth". By default
#	and when set to zero, disables the disk I/O rate limit
#	enforcement. Currently supported by IpcIo module only.
#
#
#	====  The coss store type  ====
#
#	NP: COSS filesystem in Squid-3 has been deemed too unstable for
#	    production use and has thus been removed from this release.
#	    We hope that it can be made usable again soon.
#
#	block-size=n defines the "block size" for COSS cache_dir's.
#	Squid uses file numbers as block numbers.  Since file numbers
#	are limited to 24 bits, the block size determines the maximum
#	size of the COSS partition.  The default is 512 bytes, which
#	leads to a maximum cache_dir size of 512<<24, or 8 GB.  Note
#	you should not change the coss block size after Squid
#	has written some objects to the cache_dir.
#
#	The coss file store has changed from 2.5. Now it uses a file
#	called 'stripe' in the directory names in the config - and
#	this will be created by squid -z.
#
#
#	==== COMMON OPTIONS ====
#
#	no-store	no new objects should be stored to this cache_dir.
#
#	min-size=n	the minimum object size in bytes this cache_dir
#			will accept.  It's used to restrict a cache_dir
#			to only store large objects (e.g. AUFS) while
#			other stores are optimized for smaller objects
#			(e.g. COSS).
#			Defaults to 0.
#
#	max-size=n	the maximum object size in bytes this cache_dir
#			supports.
#			The value in maximum_object_size directive, sets
#			a default unless more specific details are available
#			about the cache_dir (ie a small store capacity).
#
#	Note: To make optimal use of the max-size limits you should order
#	the cache_dir lines with the smallest max-size value first.
#
#	Note for coss, max-size must be less than COSS_MEMBUF_SZ,
#	which can be changed with the --with-coss-membuf-size=N configure
#	option.
#
#Default:
# No disk cache. Store cache ojects only in memory.
#

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/spool/squid3 100 16 256

#  TAG: store_dir_select_algorithm
#	How Squid selects which cache_dir to use when the response
#	object will fit into more than one.
#
#	Regardless of which algorithm is used the cache_dir min-size
#	and max-size parameters are obeyed. As such they can affect
#	the selection algorithm by limiting the set of considered
#	cache_dir.
#
#	Algorithms:
#
#		least-load
#
#	This algorithm is suited to caches with similar cache_dir
#	sizes and disk speeds.
#
#	The disk with the least I/O pending is selected.
#	When there are multiple disks with the same I/O load ranking
#	the cache_dir with most available capacity is selected.
#
#	When a mix of cache_dir sizes are configured the faster disks
#	have a naturally lower I/O loading and larger disks have more
#	capacity. So space used to store objects and data throughput
#	may be very unbalanced towards larger disks.
#
#
#		round-robin
#
#	This algorithm is suited to caches with unequal cache_dir
#	disk sizes.
#
#	Each cache_dir is selected in a rotation. The next suitable
#	cache_dir is used.
#
#	Available cache_dir capacity is only considered in relation
#	to whether the object will fit and meets the min-size and
#	max-size parameters.
#
#	Disk I/O loading is only considered to prevent overload on slow
#	disks. This algorithm does not spread objects by size, so any
#	I/O loading per-disk may appear very unbalanced and volatile.
#
#Default:
# store_dir_select_algorithm least-load

#  TAG: max_open_disk_fds
#	To avoid having disk as the I/O bottleneck Squid can optionally
#	bypass the on-disk cache if more than this amount of disk file
#	descriptors are open.
#
#	A value of 0 indicates no limit.
#Default:
# no limit

#  TAG: minimum_object_size	(bytes)
#	Objects smaller than this size will NOT be saved on disk.  The
#	value is specified in bytes, and the default is 0 KB, which
#	means all responses can be stored.
#Default:
# no limit

#  TAG: maximum_object_size	(bytes)
#	The default limit on size of objects stored to disk.
#	This size is used for cache_dir where max-size is not set.
#	The value is specified in bytes, and the default is 4 MB.
#
#	If you wish to get a high BYTES hit ratio, you should probably
#	increase this (one 32 MB object hit counts for 3200 10KB
#	hits).
#
#	If you wish to increase hit ratio more than you want to
#	save bandwidth you should leave this low.
#
#	NOTE: if using the LFUDA replacement policy you should increase
#	this value to maximize the byte hit rate improvement of LFUDA!
#	See replacement_policy below for a discussion of this policy.
#Default:
# maximum_object_size 4 MB

#  TAG: cache_swap_low	(percent, 0-100)
#	The low-water mark for cache object replacement.
#	Replacement begins when the swap (disk) usage is above the
#	low-water mark and attempts to maintain utilization near the
#	low-water mark.  As swap utilization gets close to high-water
#	mark object eviction becomes more aggressive.  If utilization is
#	close to the low-water mark less replacement is done each time.
#
#	Defaults are 90% and 95%. If you have a large cache, 5% could be
#	hundreds of MB. If this is the case you may wish to set these
#	numbers closer together.
#
#	See also cache_swap_high
#Default:
# cache_swap_low 90

#  TAG: cache_swap_high	(percent, 0-100)
#	The high-water mark for cache object replacement.
#	Replacement begins when the swap (disk) usage is above the
#	low-water mark and attempts to maintain utilization near the
#	low-water mark.  As swap utilization gets close to high-water
#	mark object eviction becomes more aggressive.  If utilization is
#	close to the low-water mark less replacement is done each time.
#
#	Defaults are 90% and 95%. If you have a large cache, 5% could be
#	hundreds of MB. If this is the case you may wish to set these
#	numbers closer together.
#
#	See also cache_swap_low
#Default:
# cache_swap_high 95

