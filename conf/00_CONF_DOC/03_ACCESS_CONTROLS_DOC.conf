# ACCESS CONTROLS
# -----------------------------------------------------------------------------

#  TAG: external_acl_type
#	This option defines external acl classes using a helper program
#	to look up the status
#
#	  external_acl_type name [options] FORMAT.. /path/to/helper [helper arguments..]
#
#	Options:
#
#	  ttl=n		TTL in seconds for cached results (defaults to 3600
#	  		for 1 hour)
#	  negative_ttl=n
#	  		TTL for cached negative lookups (default same
#	  		as ttl)
#	  children-max=n
#			Maximum number of acl helper processes spawned to service
#			external acl lookups of this type. (default 20)
#	  children-startup=n
#			Minimum number of acl helper processes to spawn during
#			startup and reconfigure to service external acl lookups
#			of this type. (default 0)
#	  children-idle=n
#			Number of acl helper processes to keep ahead of traffic
#			loads. Squid will spawn this many at once whenever load
#			rises above the capabilities of existing processes.
#			Up to the value of children-max. (default 1)
#	  concurrency=n	concurrency level per process. Only used with helpers
#			capable of processing more than one query at a time.
#	  cache=n	limit the result cache size, default is unbounded.
#	  grace=n	Percentage remaining of TTL where a refresh of a
#			cached entry should be initiated without needing to
#			wait for a new reply. (default is for no grace period)
#	  protocol=2.5	Compatibility mode for Squid-2.5 external acl helpers
#	  ipv4 / ipv6	IP protocol used to communicate with this helper.
#			The default is to auto-detect IPv6 and use it when available.
#
#	FORMAT specifications
#
#	  %LOGIN	Authenticated user login name
#	  %EXT_USER	Username from previous external acl
#	  %EXT_LOG	Log details from previous external acl
#	  %EXT_TAG	Tag from previous external acl
#	  %IDENT	Ident user name
#	  %SRC		Client IP
#	  %SRCPORT	Client source port
#	  %URI		Requested URI
#	  %DST		Requested host
#	  %PROTO	Requested protocol
#	  %PORT		Requested port
#	  %PATH		Requested URL path
#	  %METHOD	Request method
#	  %MYADDR	Squid interface address
#	  %MYPORT	Squid http_port number
#	  %PATH		Requested URL-path (including query-string if any)
#	  %USER_CERT	SSL User certificate in PEM format
#	  %USER_CERTCHAIN SSL User certificate chain in PEM format
#	  %USER_CERT_xx	SSL User certificate subject attribute xx
#	  %USER_CA_xx	SSL User certificate issuer attribute xx
#
#	  %>{Header}	HTTP request header "Header"
#	  %>{Hdr:member}
#	  		HTTP request header "Hdr" list member "member"
#	  %>{Hdr:;member}
#	  		HTTP request header list member using ; as
#	  		list separator. ; can be any non-alphanumeric
#			character.
#
#	  %<{Header}	HTTP reply header "Header"
#	  %<{Hdr:member}
#	  		HTTP reply header "Hdr" list member "member"
#	  %<{Hdr:;member}
#	  		HTTP reply header list member using ; as
#	  		list separator. ; can be any non-alphanumeric
#			character.
#
#	  %ACL		The name of the ACL being tested.
#	  %DATA		The ACL arguments. If not used then any arguments
#			is automatically added at the end of the line
#			sent to the helper.
#			NOTE: this will encode the arguments as one token,
#			whereas the default will pass each separately.
#
#	  %%		The percent sign. Useful for helpers which need
#			an unchanging input format.
#
#	In addition to the above, any string specified in the referencing
#	acl will also be included in the helper request line, after the
#	specified formats (see the "acl external" directive)
#
#	The helper receives lines per the above format specification,
#	and returns lines starting with OK or ERR indicating the validity
#	of the request and optionally followed by additional keywords with
#	more details.
#
#	General result syntax:
#
#	  OK/ERR keyword=value ...
#
#	Defined keywords:
#
#	  user=		The users name (login)
#	  password=	The users password (for login= cache_peer option)
#	  message=	Message describing the reason. Available as %o
#	  		in error pages
#	  tag=		Apply a tag to a request (for both ERR and OK results)
#	  		Only sets a tag, does not alter existing tags.
#	  log=		String to be logged in access.log. Available as
#	  		%ea in logformat specifications
#
#	If protocol=3.0 (the default) then URL escaping is used to protect
#	each value in both requests and responses.
#
#	If using protocol=2.5 then all values need to be enclosed in quotes
#	if they may contain whitespace, or the whitespace escaped using \.
#	And quotes or \ characters within the keyword value must be \ escaped.
#
#	When using the concurrency= option the protocol is changed by
#	introducing a query channel tag infront of the request/response.
#	The query channel tag is a number between 0 and concurrency-1.
#Default:
# none

#  TAG: acl
#	Defining an Access List
#
#	Every access list definition must begin with an aclname and acltype, 
#	followed by either type-specific arguments or a quoted filename that
#	they are read from.
#
#	   acl aclname acltype argument ...
#	   acl aclname acltype "file" ...
#
#	When using "file", the file should contain one item per line.
#
#	By default, regular expressions are CASE-SENSITIVE.
#	To make them case-insensitive, use the -i option. To return case-sensitive
#	use the +i option between patterns, or make a new ACL line without -i.
#
#	Some acl types require suspending the current request in order
#	to access some external data source.
#	Those which do are marked with the tag [slow], those which
#	don't are marked as [fast].
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl
#	for further information
#
#	***** ACL TYPES AVAILABLE *****
#
#	acl aclname src ip-address/mask ...	# clients IP address [fast]
#	acl aclname src addr1-addr2/mask ...	# range of addresses [fast]
#	acl aclname dst ip-address/mask ...	# URL host's IP address [slow]
#	acl aclname localip ip-address/mask ... # IP address the client connected to [fast]
#
#	acl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)
#	  # The arp ACL requires the special configure option --enable-arp-acl.
#	  # Furthermore, the ARP ACL code is not portable to all operating systems.
#	  # It works on Linux, Solaris, Windows, FreeBSD, and some
#	  # other *BSD variants.
#	  # [fast]
#	  #
#	  # NOTE: Squid can only determine the MAC address for clients that are on
#	  # the same subnet. If the client is on a different subnet,
#	  # then Squid cannot find out its MAC address.
#
#	acl aclname srcdomain   .foo.com ...
#	  # reverse lookup, from client IP [slow]
#	acl aclname dstdomain   .foo.com ...
#	  # Destination server from URL [fast]
#	acl aclname srcdom_regex [-i] \.foo\.com ...
#	  # regex matching client name [slow]
#	acl aclname dstdom_regex [-i] \.foo\.com ...
#	  # regex matching server [fast]
#	  #
#	  # For dstdomain and dstdom_regex a reverse lookup is tried if a IP
#	  # based URL is used and no match is found. The name "none" is used
#	  # if the reverse lookup fails.
#
#	acl aclname src_as number ...
#	acl aclname dst_as number ...
#	  # [fast]
#	  # Except for access control, AS numbers can be used for
#	  # routing of requests to specific caches. Here's an
#	  # example for routing all requests for AS#1241 and only
#	  # those to mycache.mydomain.net:
#	  # acl asexample dst_as 1241
#	  # cache_peer_access mycache.mydomain.net allow asexample
#	  # cache_peer_access mycache_mydomain.net deny all
#
#	acl aclname peername myPeer ...
#	  # [fast]
#	  # match against a named cache_peer entry
#	  # set unique name= on cache_peer lines for reliable use.
#
#	acl aclname time [day-abbrevs] [h1:m1-h2:m2]
#	  # [fast]
#	  #  day-abbrevs:
#	  #	S - Sunday
#	  #	M - Monday
#	  #	T - Tuesday
#	  #	W - Wednesday
#	  #	H - Thursday
#	  #	F - Friday
#	  #	A - Saturday
#	  #  h1:m1 must be less than h2:m2
#
#	acl aclname url_regex [-i] ^http:// ...
#	  # regex matching on whole URL [fast]
#	acl aclname urllogin [-i] [^a-zA-Z0-9] ...
#	  # regex matching on URL login field
#	acl aclname urlpath_regex [-i] \.gif$ ...
#	  # regex matching on URL path [fast]
#
#	acl aclname port 80 70 21 0-1024...   # destination TCP port [fast]
#	                                      # ranges are alloed
#	acl aclname localport 3128 ...	      # TCP port the client connected to [fast]
#	                                      # NP: for interception mode this is usually '80'
#
#	acl aclname myportname 3128 ...       # http(s)_port name [fast]
#
#	acl aclname proto HTTP FTP ...        # request protocol [fast]
# 
#	acl aclname method GET POST ...       # HTTP request method [fast]
#
#	acl aclname http_status 200 301 500- 400-403 ... 
#	  # status code in reply [fast]
#
#	acl aclname browser [-i] regexp ...
#	  # pattern match on User-Agent header (see also req_header below) [fast]
#
#	acl aclname referer_regex [-i] regexp ...
#	  # pattern match on Referer header [fast]
#	  # Referer is highly unreliable, so use with care
#
#	acl aclname ident username ...
#	acl aclname ident_regex [-i] pattern ...
#	  # string match on ident output [slow]
#	  # use REQUIRED to accept any non-null ident.
#
#	acl aclname proxy_auth [-i] username ...
#	acl aclname proxy_auth_regex [-i] pattern ...
#	  # perform http authentication challenge to the client and match against
#	  # supplied credentials [slow]
#	  #
#	  # takes a list of allowed usernames.
#	  # use REQUIRED to accept any valid username.
#	  #
#	  # Will use proxy authentication in forward-proxy scenarios, and plain
#	  # http authenticaiton in reverse-proxy scenarios
#	  #
#	  # NOTE: when a Proxy-Authentication header is sent but it is not
#	  # needed during ACL checking the username is NOT logged
#	  # in access.log.
#	  #
#	  # NOTE: proxy_auth requires a EXTERNAL authentication program
#	  # to check username/password combinations (see
#	  # auth_param directive).
#	  #
#	  # NOTE: proxy_auth can't be used in a transparent/intercepting proxy
#	  # as the browser needs to be configured for using a proxy in order
#	  # to respond to proxy authentication.
#
#	acl aclname snmp_community string ...
#	  # A community string to limit access to your SNMP Agent [fast]
#	  # Example:
#	  #
#	  #	acl snmppublic snmp_community public
#
#	acl aclname maxconn number
#	  # This will be matched when the client's IP address has
#	  # more than <number> TCP connections established. [fast]
#	  # NOTE: This only measures direct TCP links so X-Forwarded-For
#	  # indirect clients are not counted.
#
#	acl aclname max_user_ip [-s] number
#	  # This will be matched when the user attempts to log in from more
#	  # than <number> different ip addresses. The authenticate_ip_ttl
#	  # parameter controls the timeout on the ip entries. [fast]
#	  # If -s is specified the limit is strict, denying browsing
#	  # from any further IP addresses until the ttl has expired. Without
#	  # -s Squid will just annoy the user by "randomly" denying requests.
#	  # (the counter is reset each time the limit is reached and a
#	  # request is denied)
#	  # NOTE: in acceleration mode or where there is mesh of child proxies,
#	  # clients may appear to come from multiple addresses if they are
#	  # going through proxy farms, so a limit of 1 may cause user problems.
#
#	acl aclname random probability
#	  # Pseudo-randomly match requests. Based on the probability given.
#	  # Probability may be written as a decimal (0.333), fraction (1/3)
#	  # or ratio of matches:non-matches (3:5).
#
#	acl aclname req_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the request generated
#	  # by the client. Can be used to detect file upload or some
#	  # types HTTP tunneling requests [fast]
#	  # NOTE: This does NOT match the reply. You cannot use this
#	  # to match the returned file type.
#
#	acl aclname req_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known request headers.  May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACL [fast]
#
#	acl aclname rep_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the reply received by
#	  # squid. Can be used to detect file download or some
#	  # types HTTP tunneling requests. [fast]
#	  # NOTE: This has no effect in http_access rules. It only has
#	  # effect in rules that affect the reply data stream such as
#	  # http_reply_access.
#
#	acl aclname rep_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known reply headers. May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACLs [fast]
#
#	acl aclname external class_name [arguments...]
#	  # external ACL lookup via a helper class defined by the
#	  # external_acl_type directive [slow]
#
#	acl aclname user_cert attribute values...
#	  # match against attributes in a user SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST [fast]
#
#	acl aclname ca_cert attribute values...
#	  # match against attributes a users issuing CA SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST [fast]
#
#	acl aclname ext_user username ...
#	acl aclname ext_user_regex [-i] pattern ...
#	  # string match on username returned by external acl helper [slow]
#	  # use REQUIRED to accept any non-null user name.
#
#	acl aclname tag tagvalue ...
#	  # string match on tag returned by external acl helper [slow]
#
#	acl aclname hier_code codename ...
#	  # string match against squid hierarchy code(s); [fast]
#	  #  e.g., DIRECT, PARENT_HIT, NONE, etc.
#	  #
#	  # NOTE: This has no effect in http_access rules. It only has
#	  # effect in rules that affect the reply data stream such as
#	  # http_reply_access.
#
#
#	Examples:
#		acl macaddress arp 09:00:2b:23:45:67
#		acl myexample dst_as 1241
#		acl password proxy_auth REQUIRED
#		acl fileupload req_mime_type -i ^multipart/form-data$
#		acl javascript rep_mime_type -i ^application/x-javascript$
#
#Default:
# ACLs all, manager, localhost, and to_localhost are predefined.
#
#
# Recommended minimum configuration:
#

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
#acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
#acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
#acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
#acl localnet src fc00::/7       # RFC 4193 local private network range
#acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

#_DEFAULT_ acl SSL_ports port 443
#_DEFAULT_ acl Safe_ports port 80		# http
#_DEFAULT_ acl Safe_ports port 21		# ftp
#_DEFAULT_ acl Safe_ports port 443		# https
#_DEFAULT_ acl Safe_ports port 70		# gopher
#_DEFAULT_ acl Safe_ports port 210		# wais
#_DEFAULT_ acl Safe_ports port 1025-65535	# unregistered ports
#_DEFAULT_ acl Safe_ports port 280		# http-mgmt
#_DEFAULT_ acl Safe_ports port 488		# gss-http
#_DEFAULT_ acl Safe_ports port 591		# filemaker
#_DEFAULT_ acl Safe_ports port 777		# multiling http
#_DEFAULT_ acl CONNECT method CONNECT

#  TAG: follow_x_forwarded_for
#	Allowing or Denying the X-Forwarded-For header to be followed to
#	find the original source of a request.
#
#	Requests may pass through a chain of several other proxies
#	before reaching us.  The X-Forwarded-For header will contain a
#	comma-separated list of the IP addresses in the chain, with the
#	rightmost address being the most recent.
#
#	If a request reaches us from a source that is allowed by this
#	configuration item, then we consult the X-Forwarded-For header
#	to see where that host received the request from.  If the
#	X-Forwarded-For header contains multiple addresses, we continue
#	backtracking until we reach an address for which we are not allowed
#	to follow the X-Forwarded-For header, or until we reach the first
#	address in the list. For the purpose of ACL used in the
#	follow_x_forwarded_for directive the src ACL type always matches
#	the address we are testing and srcdomain matches its rDNS.
#
#	The end result of this process is an IP address that we will
#	refer to as the indirect client address.  This address may
#	be treated as the client address for access control, ICAP, delay
#	pools and logging, depending on the acl_uses_indirect_client,
#	icap_uses_indirect_client, delay_pool_uses_indirect_client, 
#	log_uses_indirect_client and tproxy_uses_indirect_client options.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#	SECURITY CONSIDERATIONS:
#
#		Any host for which we follow the X-Forwarded-For header
#		can place incorrect information in the header, and Squid
#		will use the incorrect information as if it were the
#		source address of the request.  This may enable remote
#		hosts to bypass any access control restrictions that are
#		based on the client's source addresses.
#
#	For example:
#
#		acl localhost src 127.0.0.1
#		acl my_other_proxy srcdomain .proxy.example.com
#		follow_x_forwarded_for allow localhost
#		follow_x_forwarded_for allow my_other_proxy
#Default:
# X-Forwarded-For header will be ignored.

#  TAG: acl_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in acl matching.
#
#	NOTE: maxconn ACL considers direct TCP links and indirect
#	      clients will always have zero. So no match.
#Default:
# acl_uses_indirect_client on

#  TAG: delay_pool_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in delay pools.
#Default:
# delay_pool_uses_indirect_client on

#  TAG: log_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in the access log.
#Default:
# log_uses_indirect_client on

#  TAG: tproxy_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address when spoofing the outgoing client.
#
#	This has no effect on requests arriving in non-tproxy
#	mode ports.
#
#	SECURITY WARNING: Usage of this option is dangerous
#	and should not be used trivially. Correct configuration
#	of follow_x_forewarded_for with a limited set of trusted
#	sources is required to prevent abuse of your proxy.
#Default:
# tproxy_uses_indirect_client off

#  TAG: http_access
#	Allowing or Denying access based on defined access lists
#
#	Access to the HTTP port:
#	http_access allow|deny [!]aclname ...
#
#	NOTE on default values:
#
#	If there are no "access" lines present, the default is to deny
#	the request.
#
#	If none of the "access" lines cause a match, the default is the
#	opposite of the last line in the list.  If the last line was
#	deny, the default is allow.  Conversely, if the last line
#	is allow, the default will be deny.  For these reasons, it is a
#	good idea to have an "deny all" entry at the end of your access
#	lists to avoid potential confusion.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#Default:
# Deny, unless rules exist in squid.conf.
#

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
#_DEFAULT_ http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
#_DEFAULT_ http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
#_DEFAULT_ http_access allow localhost manager
#_DEFAULT_ http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
#http_access allow localnet
#_DEFAULT_ http_access allow localhost

# And finally deny all other access to this proxy
#_DEFAULT_ http_access deny all

#  TAG: adapted_http_access
#	Allowing or Denying access based on defined access lists
#
#	Essentially identical to http_access, but runs after redirectors
#	and ICAP/eCAP adaptation. Allowing access control based on their
#	output.
#
#	If not set then only http_access is used.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: http_reply_access
#	Allow replies to client requests. This is complementary to http_access.
#
#	http_reply_access allow|deny [!] aclname ...
#
#	NOTE: if there are no access lines present, the default is to allow
#	all replies.
#
#	If none of the access lines cause a match the opposite of the
#	last line will apply. Thus it is good practice to end the rules
#	with an "allow all" or "deny all" entry.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: icp_access
#	Allowing or Denying access to the ICP port based on defined
#	access lists
#
#	icp_access  allow|deny [!]aclname ...
#
#	NOTE: The default if no icp_access lines are present is to
#	deny all traffic. This default may cause problems with peers
#	using ICP.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow ICP queries from local networks only
##icp_access allow localnet
##icp_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: htcp_access
#	Allowing or Denying access to the HTCP port based on defined
#	access lists
#
#	htcp_access  allow|deny [!]aclname ...
#
#	See also htcp_clr_access for details on access control for
#	cache purge (CLR) HTCP messages.
#
#	NOTE: The default if no htcp_access lines are present is to
#	deny all traffic. This default may cause problems with peers
#	using the htcp option.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP queries from local networks only
##htcp_access allow localnet
##htcp_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: htcp_clr_access
#	Allowing or Denying access to purge content using HTCP based
#	on defined access lists.
#	See htcp_access for details on general HTCP access control.
#
#	htcp_clr_access  allow|deny [!]aclname ...
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP CLR requests from trusted peers
#acl htcp_clr_peer src 192.0.2.2 2001:DB8::2
#htcp_clr_access allow htcp_clr_peer
#htcp_clr_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: miss_access
#	Determins whether network access is permitted when satisfying a request.
#
#	For example;
#	    to force your neighbors to use you as a sibling instead of
#	    a parent.
#
#		acl localclients src 192.0.2.0/24 2001:DB8::a:0/64
#		miss_access deny  !localclients
#		miss_access allow all
#
#	This means only your local clients are allowed to fetch relayed/MISS
#	replies from the network and all other clients can only fetch cached
#	objects (HITs).
#
#	The default for this setting allows all clients who passed the
#	http_access rules to relay via this proxy.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: ident_lookup_access
#	A list of ACL elements which, if matched, cause an ident
#	(RFC 931) lookup to be performed for this request.  For
#	example, you might choose to always perform ident lookups
#	for your main multi-user Unix boxes, but not for your Macs
#	and PCs.  By default, ident lookups are not performed for
#	any requests.
#
#	To enable ident lookups for specific client addresses, you
#	can follow this example:
#
#	acl ident_aware_hosts src 198.168.1.0/24
#	ident_lookup_access allow ident_aware_hosts
#	ident_lookup_access deny all
#
#	Only src type ACL checks are fully supported.  A srcdomain
#	ACL might work at times, but it will not always provide
#	the correct result.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Unless rules exist in squid.conf, IDENT is not fetched.

#  TAG: reply_body_max_size	size [acl acl...]
#	This option specifies the maximum size of a reply body. It can be
#	used to prevent users from downloading very large files, such as
#	MP3's and movies. When the reply headers are received, the
#	reply_body_max_size lines are processed, and the first line where
#	all (if any) listed ACLs are true is used as the maximum body size
#	for this reply.
#
#	This size is checked twice. First when we get the reply headers,
#	we check the content-length value.  If the content length value exists
#	and is larger than the allowed size, the request is denied and the
#	user receives an error message that says "the request or reply
#	is too large." If there is no content-length, and the reply
#	size exceeds this limit, the client's connection is just closed
#	and they will receive a partial reply.
#
#	WARNING: downstream caches probably can not detect a partial reply
#	if there is no content-length header, so they will cache
#	partial responses and give them out as hits.  You should NOT
#	use this option if you have downstream caches.
#
#	WARNING: A maximum size smaller than the size of squid's error messages
#	will cause an infinite loop and crash squid. Ensure that the smallest
#	non-zero value you use is greater that the maximum header size plus
#	the size of your largest error page.
#
#	If you set this parameter none (the default), there will be
#	no limit imposed.
#
#	Configuration Format is:
#		reply_body_max_size SIZE UNITS [acl ...]
#	ie.
#		reply_body_max_size 10 MB
#
#Default:
# No limit is applied.

