# OPTIONS FOR URL REWRITING
# -----------------------------------------------------------------------------

#  TAG: url_rewrite_program
#	Specify the location of the executable URL rewriter to use.
#	Since they can perform almost any function there isn't one included.
#
#	For each requested URL, the rewriter will receive on line with the format
#
#	URL <SP> client_ip "/" fqdn <SP> user <SP> method [<SP> kvpairs]<NL>
#
#	In the future, the rewriter interface will be extended with
#	key=value pairs ("kvpairs" shown above).  Rewriter programs
#	should be prepared to receive and possibly ignore additional
#	whitespace-separated tokens on each input line.
#
#	And the rewriter may return a rewritten URL. The other components of
#	the request line does not need to be returned (ignored if they are).
#
#	The rewriter can also indicate that a client-side redirect should
#	be performed to the new URL. This is done by prefixing the returned
#	URL with "301:" (moved permanently) or 302: (moved temporarily), etc.
#
#	By default, a URL rewriter is not used.
#Default:
# none

#  TAG: url_rewrite_children
#	The maximum number of redirector processes to spawn. If you limit
#	it too few Squid will have to wait for them to process a backlog of
#	URLs, slowing it down. If you allow too many they will use RAM
#	and other system resources noticably.
#	
#	The startup= and idle= options allow some measure of skew in your
#	tuning.
#	
#		startup=
#	
#	Sets a minimum of how many processes are to be spawned when Squid
#	starts or reconfigures. When set to zero the first request will
#	cause spawning of the first child process to handle it.
#	
#	Starting too few will cause an initial slowdown in traffic as Squid
#	attempts to simultaneously spawn enough processes to cope.
#	
#		idle=
#	
#	Sets a minimum of how many processes Squid is to try and keep available
#	at all times. When traffic begins to rise above what the existing
#	processes can handle this many more will be spawned up to the maximum
#	configured. A minimum setting of 1 is required.
#
#		concurrency=
#
#	The number of requests each redirector helper can handle in
#	parallel. Defaults to 0 which indicates the redirector
#	is a old-style single threaded redirector.
#
#	When this directive is set to a value >= 1 then the protocol
#	used to communicate with the helper is modified to include
#	a request ID in front of the request/response. The request
#	ID from the request must be echoed back with the response
#	to that request.
#Default:
# url_rewrite_children 20 startup=0 idle=1 concurrency=0

#  TAG: url_rewrite_host_header
#	To preserve same-origin security policies in browsers and
#	prevent Host: header forgery by redirectors Squid rewrites
#	any Host: header in redirected requests.
#	
#	If you are running an accelerator this may not be a wanted
#	effect of a redirector. This directive enables you disable
#	Host: alteration in reverse-proxy traffic.
#	
#	WARNING: Entries are cached on the result of the URL rewriting
#	process, so be careful if you have domain-virtual hosts.
#	
#	WARNING: Squid and other software verifies the URL and Host
#	are matching, so be careful not to relay through other proxies
#	or inspecting firewalls with this disabled.
#Default:
# url_rewrite_host_header on

#  TAG: url_rewrite_access
#	If defined, this access list specifies which requests are
#	sent to the redirector processes.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: url_rewrite_bypass
#	When this is 'on', a request will not go through the
#	redirector if all the helpers are busy.  If this is 'off'
#	and the redirector queue grows too large, Squid will exit
#	with a FATAL error and ask you to increase the number of
#	redirectors.  You should only enable this if the redirectors
#	are not critical to your caching system.  If you use
#	redirectors for access control, and you enable this option,
#	users may have access to pages they should not
#	be allowed to request.
#Default:
# url_rewrite_bypass off

