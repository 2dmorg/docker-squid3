# SSL OPTIONS
# -----------------------------------------------------------------------------

#  TAG: ssl_unclean_shutdown
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Some browsers (especially MSIE) bugs out on SSL shutdown
#	messages.
#Default:
# ssl_unclean_shutdown off

#  TAG: ssl_engine
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	The OpenSSL engine to use. You will need to set this if you
#	would like to use hardware SSL acceleration for example.
#Default:
# none

#  TAG: sslproxy_client_certificate
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Client SSL Certificate to use when proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_client_key
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Client SSL Key to use when proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_version
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	SSL version level to use when proxying https:// URLs
#
#	The versions of SSL/TLS supported:
#
#	    1	automatic (default)
#	    2	SSLv2 only
#	    3	SSLv3 only
#	    4	TLSv1.0 only
#	    5	TLSv1.1 only
#	    6	TLSv1.2 only
#Default:
# automatic SSL/TLS version negotiation

#  TAG: sslproxy_options
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	SSL implementation options to use when proxying https:// URLs
#	
#	The most important being:
#
#	    NO_SSLv2    Disallow the use of SSLv2
#	    NO_SSLv3    Disallow the use of SSLv3
#	    NO_TLSv1    Disallow the use of TLSv1.0
#	    NO_TLSv1_1  Disallow the use of TLSv1.1
#	    NO_TLSv1_2  Disallow the use of TLSv1.2
#	    SINGLE_DH_USE
#		      Always create a new key when using temporary/ephemeral
#		      DH key exchanges
#	    SSL_OP_NO_TICKET
#		      Disable use of RFC5077 session tickets. Some servers
#		      may have problems understanding the TLS extension due
#		      to ambiguous specification in RFC4507.
#	    ALL       Enable various bug workarounds suggested as "harmless"
#		      by OpenSSL. Be warned that this may reduce SSL/TLS
#		      strength to some attacks.
#	
#	See the OpenSSL SSL_CTX_set_options documentation for a
#	complete list of possible options.
#Default:
# none

#  TAG: sslproxy_cipher
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	SSL cipher list to use when proxying https:// URLs
#
#	Colon separated list of supported ciphers.
#Default:
# none

#  TAG: sslproxy_cafile
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	file containing CA certificates to use when verifying server
#	certificates while proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_capath
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	directory containing CA certificates to use when verifying
#	server certificates while proxying https:// URLs
#Default:
# none

#  TAG: ssl_bump
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	This option is consulted when a CONNECT request is received on
#	an http_port (or a new connection is intercepted at an
#	https_port), provided that port was configured with an ssl-bump
#	flag. The subsequent data on the connection is either treated as
#	HTTPS and decrypted OR tunneled at TCP level without decryption,
#	depending on the first bumping "mode" which ACLs match.
#
#	ssl_bump <mode> [!]acl ...
#
#	The following bumping modes are supported:
#
#	    client-first
#		Allow bumping of the connection. Establish a secure connection
#		with the client first, then connect to the server. This old mode
#		does not allow Squid to mimic server SSL certificate and does
#		not work with intercepted SSL connections.
#
#	    server-first
#		Allow bumping of the connection. Establish a secure connection
#		with the server first, then establish a secure connection with
#		the client, using a mimicked server certificate. Works with both
#		CONNECT requests and intercepted SSL connections.
#
#	    none
#		Become a TCP tunnel without decoding the connection.
#		Works with both CONNECT requests and intercepted SSL
#		connections. This is the default behavior when no
#		ssl_bump option is given or no ssl_bump ACLs match.
#
#	By default, no connections are bumped.
#
#	The first matching ssl_bump option wins. If no ACLs match, the
#	connection is not bumped. Unlike most allow/deny ACL lists, ssl_bump
#	does not have an implicit "negate the last given option" rule. You
#	must make that rule explicit if you convert old ssl_bump allow/deny
#	rules that rely on such an implicit rule.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#	See also: http_port ssl-bump, https_port ssl-bump
#
#
#	# Example: Bump all requests except those originating from
#	# localhost or those going to example.com.
#
#	acl broken_sites dstdomain .example.com
#	ssl_bump none localhost
#	ssl_bump none broken_sites
#	ssl_bump server-first all
#Default:
# Does not bump unless rules are present in squid.conf

#  TAG: sslproxy_flags
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Various flags modifying the use of SSL while proxying https:// URLs:
#	    DONT_VERIFY_PEER	Accept certificates that fail verification.
#				For refined control, see sslproxy_cert_error.
#	    NO_DEFAULT_CA	Don't use the default CA list built in
#				to OpenSSL.
#Default:
# none

#  TAG: sslproxy_cert_error
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Use this ACL to bypass server certificate validation errors.
#
#	For example, the following lines will bypass all validation errors
#	when talking to servers for example.com. All other
#	validation errors will result in ERR_SECURE_CONNECT_FAIL error.
#
#		acl BrokenButTrustedServers dstdomain example.com
#		sslproxy_cert_error allow BrokenButTrustedServers
#		sslproxy_cert_error deny all
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#	Using slow acl types may result in server crashes
#
#	Without this option, all server certificate validation errors
#	terminate the transaction to protect Squid and the client.
#
#	SECURITY WARNING:
#		Bypassing validation errors is dangerous because an
#		error usually implies that the server cannot be trusted
#		and the connection may be insecure.
#
#	See also: sslproxy_flags and DONT_VERIFY_PEER.
#Default:
# Server certificate errors terminate the transaction.

#  TAG: sslproxy_cert_sign
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#
#        sslproxy_cert_sign <signing algorithm> acl ...
#
#        The following certificate signing algorithms are supported:
#
#	   signTrusted
#		Sign using the configured CA certificate which is usually
#		placed in and trusted by end-user browsers. This is the
#		default for trusted origin server certificates.
#
#	   signUntrusted
#		Sign to guarantee an X509_V_ERR_CERT_UNTRUSTED browser error.
#		This is the default for untrusted origin server certificates
#		that are not self-signed (see ssl::certUntrusted).
#
#	   signSelf
#		Sign using a self-signed certificate with the right CN to
#		generate a X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT error in the
#		browser. This is the default for self-signed origin server
#		certificates (see ssl::certSelfSigned).
#
#	This clause only supports fast acl types.
#
#	When sslproxy_cert_sign acl(s) match, Squid uses the corresponding
#	signing algorithm to generate the certificate and ignores all
#	subsequent sslproxy_cert_sign options (the first match wins). If no
#	acl(s) match, the default signing algorithm is determined by errors
#	detected when obtaining and validating the origin server certificate.
#
#	WARNING: SQUID_X509_V_ERR_DOMAIN_MISMATCH and ssl:certDomainMismatch can
#	be used with sslproxy_cert_adapt, but if and only if Squid is bumping a
#	CONNECT request that carries a domain name. In all other cases (CONNECT
#	to an IP address or an intercepted SSL connection), Squid cannot detect
#	the domain mismatch at certificate generation time when
#	bump-server-first is used.
#Default:
# none

#  TAG: sslproxy_cert_adapt
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	
#	sslproxy_cert_adapt <adaptation algorithm> acl ...
#
#	The following certificate adaptation algorithms are supported:
#
#	   setValidAfter
#		Sets the "Not After" property to the "Not After" property of
#		the CA certificate used to sign generated certificates.
#
#	   setValidBefore
#		Sets the "Not Before" property to the "Not Before" property of
#		the CA certificate used to sign generated certificates.
#
#	   setCommonName or setCommonName{CN}
#		Sets Subject.CN property to the host name specified as a 
#		CN parameter or, if no explicit CN parameter was specified,
#		extracted from the CONNECT request. It is a misconfiguration
#		to use setCommonName without an explicit parameter for
#		intercepted or tproxied SSL connections.
#		
#	This clause only supports fast acl types.
#
#	Squid first groups sslproxy_cert_adapt options by adaptation algorithm.
#	Within a group, when sslproxy_cert_adapt acl(s) match, Squid uses the
#	corresponding adaptation algorithm to generate the certificate and
#	ignores all subsequent sslproxy_cert_adapt options in that algorithm's
#	group (i.e., the first match wins within each algorithm group). If no
#	acl(s) match, the default mimicking action takes place.
#
#	WARNING: SQUID_X509_V_ERR_DOMAIN_MISMATCH and ssl:certDomainMismatch can
#	be used with sslproxy_cert_adapt, but if and only if Squid is bumping a
#	CONNECT request that carries a domain name. In all other cases (CONNECT
#	to an IP address or an intercepted SSL connection), Squid cannot detect
#	the domain mismatch at certificate generation time when
#	bump-server-first is used.
#Default:
# none

#  TAG: sslpassword_program
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl
#
#	Specify a program used for entering SSL key passphrases
#	when using encrypted SSL certificate keys. If not specified
#	keys must either be unencrypted, or Squid started with the -N
#	option to allow it to query interactively for the passphrase.
#
#	The key file name is given as argument to the program allowing
#	selection of the right password if you have multiple encrypted
#	keys.
#Default:
# none

