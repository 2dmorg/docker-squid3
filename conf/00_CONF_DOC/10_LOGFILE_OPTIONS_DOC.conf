# LOGFILE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: logformat
#	Usage:
#
#	logformat <name> <format specification>
#
#	Defines an access log format.
#
#	The <format specification> is a string with embedded % format codes
#
#	% format codes all follow the same basic structure where all but
#	the formatcode is optional. Output strings are automatically escaped
#	as required according to their context and the output format
#	modifiers are usually not needed, but can be specified if an explicit
#	output format is desired.
#
#		% ["|[|'|#] [-] [[0]width] [{argument}] formatcode
#
#		"	output in quoted string format
#		[	output in squid text log format as used by log_mime_hdrs
#		#	output in URL quoted format
#		'	output as-is
#
#		-	left aligned
#
#		width	minimum and/or maximum field width:
#			    [width_min][.width_max]
#			When minimum starts with 0, the field is zero-padded.
#			String values exceeding maximum width are truncated.
#
#		{arg}	argument such as header name etc
#
#	Format codes:
#
#		%	a literal % character
#		sn	Unique sequence number per log line entry
#		err_code    The ID of an error response served by Squid or
#				a similar internal error identifier.
#		err_detail  Additional err_code-dependent error information.
#
#	Connection related format codes:
#
#		>a	Client source IP address
#		>A	Client FQDN
#		>p	Client source port
#		>eui	Client source EUI (MAC address, EUI-48 or EUI-64 identifier)
#		>la	Local IP address the client connected to
#		>lp	Local port number the client connected to
#
#		la	Local listening IP address the client connection was connected to.
#		lp	Local listening port number the client connection was connected to.
#
#		<a	Server IP address of the last server or peer connection
#		<A	Server FQDN or peer name
#		<p	Server port number of the last server or peer connection
#		<la	Local IP address of the last server or peer connection
#		<lp     Local port number of the last server or peer connection
#
#	Time related format codes:
#
#		ts	Seconds since epoch
#		tu	subsecond time (milliseconds)
#		tl	Local time. Optional strftime format argument
#				default %d/%b/%Y:%H:%M:%S %z
#		tg	GMT time. Optional strftime format argument
#				default %d/%b/%Y:%H:%M:%S %z
#		tr	Response time (milliseconds)
#		dt	Total time spent making DNS lookups (milliseconds)
#
#	Access Control related format codes:
#
#		et	Tag returned by external acl
#		ea	Log string returned by external acl
#		un	User name (any available)
#		ul	User name from authentication
#		ue	User name from external acl helper
#		ui	User name from ident
#		us	User name from SSL
#
#	HTTP related format codes:
#
#		[http::]>h	Original received request header. 
#				Usually differs from the request header sent by
#				Squid, although most fields are often preserved.
#				Accepts optional header field name/value filter
#				argument using name[:[separator]element] format.
#		[http::]>ha	Received request header after adaptation and
#				redirection (pre-cache REQMOD vectoring point).
#				Usually differs from the request header sent by
#				Squid, although most fields are often preserved.
#				Optional header name argument as for >h
#		[http::]<h	Reply header. Optional header name argument
#				as for >h
#		[http::]>Hs	HTTP status code sent to the client
#		[http::]<Hs	HTTP status code received from the next hop
#		[http::]<bs	Number of HTTP-equivalent message body bytes 
#				received from the next hop, excluding chunked
#				transfer encoding and control messages.
#				Generated FTP/Gopher listings are treated as
#				received bodies.
#		[http::]mt	MIME content type
#		[http::]rm	Request method (GET/POST etc)
#		[http::]>rm	Request method from client
#		[http::]<rm	Request method sent to server or peer
#		[http::]ru	Request URL from client (historic, filtered for logging)
#		[http::]>ru	Request URL from client
#		[http::]<ru	Request URL sent to server or peer
#		[http::]rp	Request URL-Path excluding hostname
#		[http::]>rp	Request URL-Path excluding hostname from client
#		[http::]<rp	Request URL-Path excluding hostname sento to server or peer
#		[http::]rv	Request protocol version
#		[http::]>rv	Request protocol version from client
#		[http::]<rv	Request protocol version sent to server or peer
#		[http::]<st	Sent reply size including HTTP headers
#		[http::]>st	Received request size including HTTP headers. In the
#				case of chunked requests the chunked encoding metadata
#				are not included
#		[http::]>sh	Received HTTP request headers size
#		[http::]<sh	Sent HTTP reply headers size
#		[http::]st	Request+Reply size including HTTP headers
#		[http::]<sH	Reply high offset sent
#		[http::]<sS	Upstream object size
#		[http::]<pt	Peer response time in milliseconds. The timer starts
#				when the last request byte is sent to the next hop
#				and stops when the last response byte is received.
#		[http::]<tt	Total server-side time in milliseconds. The timer 
#				starts with the first connect request (or write I/O)
#				sent to the first selected peer. The timer stops
#				with the last I/O with the last peer.
#
#	Squid handling related format codes:
#
#		Ss	Squid request status (TCP_MISS etc)
#		Sh	Squid hierarchy status (DEFAULT_PARENT etc)
#
#	SSL-related format codes:
#
#		ssl::bump_mode	SslBump decision for the transaction:
#
#				For CONNECT requests that initiated bumping of
#				a connection and for any request received on
#				an already bumped connection, Squid logs the
#				corresponding SslBump mode ("server-first" or
#				"client-first"). See the ssl_bump option for
#				more information about these modes.
#
#				A "none" token is logged for requests that
#				triggered "ssl_bump" ACL evaluation matching
#				either a "none" rule or no rules at all.
#
#				In all other cases, a single dash ("-") is
#				logged.
#
#	If ICAP is enabled, the following code becomes available (as
#	well as ICAP log codes documented with the icap_log option):
#
#		icap::tt        Total ICAP processing time for the HTTP
#				transaction. The timer ticks when ICAP
#				ACLs are checked and when ICAP
#				transaction is in progress.
#
#	If adaptation is enabled the following three codes become available:
#
#		adapt::<last_h	The header of the last ICAP response or
#				meta-information from the last eCAP
#				transaction related to the HTTP transaction.
#				Like <h, accepts an optional header name
#				argument.
#
#		adapt::sum_trs Summed adaptation transaction response
#				times recorded as a comma-separated list in
#				the order of transaction start time. Each time
#				value is recorded as an integer number,
#				representing response time of one or more
#				adaptation (ICAP or eCAP) transaction in
#				milliseconds.  When a failed transaction is
#				being retried or repeated, its time is not
#				logged individually but added to the
#				replacement (next) transaction. See also:
#				adapt::all_trs.
#
#		adapt::all_trs All adaptation transaction response times.
#				Same as adaptation_strs but response times of
#				individual transactions are never added
#				together. Instead, all transaction response
#				times are recorded individually.
#
#	You can prefix adapt::*_trs format codes with adaptation
#	service name in curly braces to record response time(s) specific
#	to that service. For example: %{my_service}adapt::sum_trs
#
#	If SSL is enabled, the following formating codes become available:
#
#		%ssl::>cert_subject The Subject field of the received client
#				SSL certificate or a dash ('-') if Squid has
#				received an invalid/malformed certificate or
#				no certificate at all. Consider encoding the
#				logged value because Subject often has spaces.
#
#		%ssl::>cert_issuer The Issuer field of the received client
#				SSL certificate or a dash ('-') if Squid has
#				received an invalid/malformed certificate or
#				no certificate at all. Consider encoding the
#				logged value because Issuer often has spaces.
#
#	The default formats available (which do not need re-defining) are:
#
#logformat squid      %ts.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt
#logformat common     %>a %[ui %[un [%tl] "%rm %ru HTTP/%rv" %>Hs %<st %Ss:%Sh
#logformat combined   %>a %[ui %[un [%tl] "%rm %ru HTTP/%rv" %>Hs %<st "%{Referer}>h" "%{User-Agent}>h" %Ss:%Sh
#logformat referrer   %ts.%03tu %>a %{Referer}>h %ru
#logformat useragent  %>a [%tl] "%{User-Agent}>h"
#
#	NOTE: When the log_mime_hdrs directive is set to ON.
#		The squid, common and combined formats have a safely encoded copy
#		of the mime headers appended to each line within a pair of brackets.
#
#	NOTE: The common and combined formats are not quite true to the Apache definition.
#		The logs from Squid contain an extra status and hierarchy code appended.
#
#Default:
# The format definitions squid, common, combined, referrer, useragent are built in.

#  TAG: access_log
#	These files log client request activities. Has a line every HTTP or
#	ICP request. The format is:
#	access_log <module>:<place> [<logformat name> [acl acl ...]]
#	access_log none [acl acl ...]]
#	
#	Will log to the specified module:place using the specified format (which
#	must be defined in a logformat directive) those entries which match
#	ALL the acl's specified (which must be defined in acl clauses).
#	If no acl is specified, all requests will be logged to this destination.
#	
#	===== Modules Currently available =====
#	
#	none	Do not log any requests matching these ACL.
#		Do not specify Place or logformat name.
#	
#	stdio	Write each log line to disk immediately at the completion of
#		each request.
#		Place: the filename and path to be written.
#	
#	daemon	Very similar to stdio. But instead of writing to disk the log
#		line is passed to a daemon helper for asychronous handling instead.
#		Place: varies depending on the daemon.
#		
#		log_file_daemon Place: the file name and path to be written.
#	
#	syslog	To log each request via syslog facility.
#		Place: The syslog facility and priority level for these entries.
#		Place Format:  facility.priority
#
#		where facility could be any of:
#			authpriv, daemon, local0 ... local7 or user.
#
#		And priority could be any of:
#			err, warning, notice, info, debug.
#	
#	udp	To send each log line as text data to a UDP receiver.
#		Place: The destination host name or IP and port.
#		Place Format:   //host:port
#
#	tcp	To send each log line as text data to a TCP receiver.
#		Place: The destination host name or IP and port.
#		Place Format:   //host:port
#
#	Default:
#		access_log daemon:/var/log/squid3/access.log squid
#Default:
# access_log daemon:/var/log/squid3/access.log squid

#  TAG: icap_log
#	ICAP log files record ICAP transaction summaries, one line per
#	transaction.
#
#	The icap_log option format is:
#	icap_log <filepath> [<logformat name> [acl acl ...]]
#	icap_log none [acl acl ...]]
#	
#	Please see access_log option documentation for details. The two
#	kinds of logs share the overall configuration approach and many
#	features.
#
#	ICAP processing of a single HTTP message or transaction may
#	require multiple ICAP transactions.  In such cases, multiple
#	ICAP transaction log lines will correspond to a single access
#	log line.
#
#	ICAP log uses logformat codes that make sense for an ICAP
#	transaction. Header-related codes are applied to the HTTP header
#	embedded in an ICAP server response, with the following caveats:
#	For REQMOD, there is no HTTP response header unless the ICAP
#	server performed request satisfaction. For RESPMOD, the HTTP
#	request header is the header sent to the ICAP server. For
#	OPTIONS, there are no HTTP headers.
#
#	The following format codes are also available for ICAP logs:
#
#		icap::<A	ICAP server IP address. Similar to <A.
#
#		icap::<service_name	ICAP service name from the icap_service
#				option in Squid configuration file.
#
#		icap::ru	ICAP Request-URI. Similar to ru.
#
#		icap::rm	ICAP request method (REQMOD, RESPMOD, or 
#				OPTIONS). Similar to existing rm.
#
#		icap::>st	Bytes sent to the ICAP server (TCP payload
#				only; i.e., what Squid writes to the socket).
#
#		icap::<st	Bytes received from the ICAP server (TCP
#				payload only; i.e., what Squid reads from
#				the socket).
#
#		icap::<bs	Number of message body bytes received from the
#				ICAP server. ICAP message body, if any, usually
#				includes encapsulated HTTP message headers and
#				possibly encapsulated HTTP message body. The
#				HTTP body part is dechunked before its size is
#				computed.
#
#		icap::tr 	Transaction response time (in
#				milliseconds).  The timer starts when
#				the ICAP transaction is created and
#				stops when the transaction is completed.
#				Similar to tr.
#
#		icap::tio	Transaction I/O time (in milliseconds). The
#				timer starts when the first ICAP request
#				byte is scheduled for sending. The timers
#				stops when the last byte of the ICAP response
#				is received.
#
#		icap::to 	Transaction outcome: ICAP_ERR* for all
#				transaction errors, ICAP_OPT for OPTION
#				transactions, ICAP_ECHO for 204
#				responses, ICAP_MOD for message
#				modification, and ICAP_SAT for request
#				satisfaction. Similar to Ss.
#
#		icap::Hs	ICAP response status code. Similar to Hs.
#
#		icap::>h	ICAP request header(s). Similar to >h.
#
#		icap::<h	ICAP response header(s). Similar to <h.
#
#	The default ICAP log format, which can be used without an explicit
#	definition, is called icap_squid:
#
#logformat icap_squid %ts.%03tu %6icap::tr %>a %icap::to/%03icap::Hs %icap::<size %icap::rm %icap::ru% %un -/%icap::<A -
#
#	See also: logformat, log_icap, and %adapt::<last_h 
#Default:
# none

#  TAG: logfile_daemon
#	Specify the path to the logfile-writing daemon. This daemon is
#	used to write the access and store logs, if configured.
#
#	Squid sends a number of commands to the log daemon:
#	  L<data>\n - logfile data
#	  R\n - rotate file
#	  T\n - truncate file
#	  O\n - reopen file
#	  F\n - flush file
#	  r<n>\n - set rotate count to <n>
#	  b<n>\n - 1 = buffer output, 0 = don't buffer output
#
#	No responses is expected.
#Default:
# logfile_daemon /usr/lib/squid3/log_file_daemon

#  TAG: log_access	allow|deny acl acl...
#	This options allows you to control which requests gets logged
#	to access.log (see access_log directive). Requests denied for
#	logging will also not be accounted for in performance counters.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow logging for all transactions.

#  TAG: log_icap
#	This options allows you to control which requests get logged
#	to icap.log. See the icap_log directive for ICAP log details.
#Default:
# Allow logging for all ICAP transactions.

#  TAG: cache_store_log
#	Logs the activities of the storage manager.  Shows which
#	objects are ejected from the cache, and which objects are
#	saved and for how long.
#	There are not really utilities to analyze this data, so you can safely
#	disable it (the default).
#	
#	Store log uses modular logging outputs. See access_log for the list
#	of modules supported.
#	
#	Example:
#		cache_store_log stdio:/var/log/squid3/store.log
#		cache_store_log daemon:/var/log/squid3/store.log
#Default:
# none

#  TAG: cache_swap_state
#	Location for the cache "swap.state" file. This index file holds
#	the metadata of objects saved on disk.  It is used to rebuild
#	the cache during startup.  Normally this file resides in each
#	'cache_dir' directory, but you may specify an alternate
#	pathname here.  Note you must give a full filename, not just
#	a directory. Since this is the index for the whole object
#	list you CANNOT periodically rotate it!
#
#	If %s can be used in the file name it will be replaced with a
#	a representation of the cache_dir name where each / is replaced
#	with '.'. This is needed to allow adding/removing cache_dir
#	lines when cache_swap_log is being used.
#
#	If have more than one 'cache_dir', and %s is not used in the name
#	these swap logs will have names such as:
#
#		cache_swap_log.00
#		cache_swap_log.01
#		cache_swap_log.02
#
#	The numbered extension (which is added automatically)
#	corresponds to the order of the 'cache_dir' lines in this
#	configuration file.  If you change the order of the 'cache_dir'
#	lines in this file, these index files will NOT correspond to
#	the correct 'cache_dir' entry (unless you manually rename
#	them).  We recommend you do NOT use this option.  It is
#	better to keep these index files in each 'cache_dir' directory.
#Default:
# Store the journal inside its cache_dir

#  TAG: logfile_rotate
#	Specifies the number of logfile rotations to make when you
#	type 'squid -k rotate'. The default is 10, which will rotate
#	with extensions 0 through 9. Setting logfile_rotate to 0 will
#	disable the file name rotation, but the logfiles are still closed
#	and re-opened. This will enable you to rename the logfiles
#	yourself just before sending the rotate signal.
#
#	Note, the 'squid -k rotate' command normally sends a USR1
#	signal to the running squid process.  In certain situations
#	(e.g. on Linux with Async I/O), USR1 is used for other
#	purposes, so -k rotate uses another signal.  It is best to get
#	in the habit of using 'squid -k rotate' instead of 'kill -USR1
#	<pid>'.
#
#	Note, from Squid-3.1 this option is only a default for cache.log,
#	that log can be rotated separately by using debug_options.
#
#	Note2, for Debian/Linux the default of logfile_rotate is
#	zero, since it includes external logfile-rotation methods.
#Default:
# logfile_rotate 0

#  TAG: emulate_httpd_log
#	Replace this with an access_log directive using the format 'common' or 'combined'.
#Default:
# none

#  TAG: log_ip_on_direct
#	Remove this option from your config. To log server or peer names use %<A in the log format.
#Default:
# none

#  TAG: mime_table
#	Path to Squid's icon configuration file.
#
#	You shouldn't need to change this, but the default file contains
#	examples and formatting information if you do.
#Default:
# mime_table /usr/share/squid3/mime.conf

#  TAG: log_mime_hdrs	on|off
#	The Cache can record both the request and the response MIME
#	headers for each HTTP transaction.  The headers are encoded
#	safely and will appear as two bracketed fields at the end of
#	the access log (for either the native or httpd-emulated log
#	formats).  To enable this logging set log_mime_hdrs to 'on'.
#Default:
# log_mime_hdrs off

#  TAG: useragent_log
#	Replace this with an access_log directive using the format 'useragent'.
#Default:
# none

#  TAG: referer_log
#	Replace this with an access_log directive using the format 'referrer'.
#Default:
# none

#  TAG: pid_filename
#	A filename to write the process-id to.  To disable, enter "none".
#Default:
# pid_filename /var/run/squid3.pid

#  TAG: log_fqdn
#	Remove this option from your config. To log FQDN use %>A in the log format.
#Default:
# none

#  TAG: client_netmask
#	A netmask for client addresses in logfiles and cachemgr output.
#	Change this to protect the privacy of your cache clients.
#	A netmask of 255.255.255.0 will log all IP's in that range with
#	the last digit set to '0'.
#Default:
# Log full client IP address

#  TAG: forward_log
#	Use a regular access.log with ACL limiting it to MISS events.
#Default:
# none

#  TAG: strip_query_terms
#	By default, Squid strips query terms from requested URLs before
#	logging.  This protects your user's privacy and reduces log size.
#
#	When investigating HIT/MISS or other caching behaviour you
#	will need to disable this to see the full URL used by Squid.
#Default:
# strip_query_terms on

#  TAG: buffered_logs	on|off
#	Whether to write/send access_log records ASAP or accumulate them and
#	then write/send them in larger chunks. Buffering may improve
#	performance because it decreases the number of I/Os. However,
#	buffering increases the delay before log records become available to
#	the final recipient (e.g., a disk file or logging daemon) and,
#	hence, increases the risk of log records loss.
#
#	Note that even when buffered_logs are off, Squid may have to buffer
#	records if it cannot write/send them immediately due to pending I/Os
#	(e.g., the I/O writing the previous log record) or connectivity loss.
#
#	Currently honored by 'daemon' access_log module only.
#Default:
# buffered_logs off

#  TAG: netdb_filename
#	Where Squid stores it's netdb journal.
#	When enabled this journal preserves netdb state between restarts.
#
#	To disable, enter "none".
#Default:
# netdb_filename stdio:/var/log/squid3/netdb.state

